{"version":3,"sources":["doge.png","components/Message.js","util.js","Chat.js","components/Header.js","ConnectionManager.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Message","userid","this","props","msgs","react_default","a","createElement","reactstrap_es","left","top","object","className","src","logo","alt","body","heading","map","msg","i","key","date","message","before","Date","diff","_ref","getDay","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","dt","month","yr","hr","min","sec","concat","formatDate","length","Component","Chat","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","delayBetweenTypingStates","handleChange","bind","assertThisInitialized","sendChatMessage","notifyStartTyping","notifyStoppedTyping","clearTimeout","typingTimeoutID","e","preventDefault","send","type","setState","event","target","timerIsRunning","setTimeout","array","messages","reduce","prev","curr","topArr","pop","push","Message_Message","m","flat","slice","activeUsers","users","user","fluid","sm","Chat_MessageList","Typers","typers","onSubmit","id","placeholder","onChange","MessageList","_this2","scrollToBottom","messagesEnd","scrollIntoView","behavior","_this3","ref","div","messageList","style","float","clear","el","Header","toggle","isOpen","color","dark","fixed","onClick","navbar","u","ConnectionManager","uiHandler","uiManager","conn","peers","Map","address","WebSocket","addEventListener","console","log","receive","data","readyState","OPEN","JSON","parse","_message$data","d","receiveMessage","receiveChatHistory","me","you","others","clients","receiveActiveUsers","toConsumableArray","o","addToTypers","removeFromTypers","stringify","App","connectionManager","url","getServerUrl","connect","pingTimeoutId","filter","typerid","window","location","hostname","set","Set","Header_Header","src_Chat_0","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.601ba5f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doge.69ae4e8f.png\";","import React, { Component } from 'react';\r\nimport { formatDate } from '../util.js';\r\nimport { Media } from 'reactstrap';\r\nimport logo from '../doge.png';\r\n\r\nexport default class Message extends Component {\r\n\r\n    render() {\r\n        const { userid } = this.props.msgs[0];\r\n        return (\r\n            <Media>\r\n                <Media left top>\r\n                    <Media object className=\"avatar mr-2 rounded-circle\" src={logo} alt=\"avatar\" />\r\n                </Media>\r\n                <Media body className=\"wrap d-flex flex-column\">\r\n                    <Media heading>\r\n                        {userid}\r\n                    </Media>\r\n                    {\r\n                        this.props.msgs.map((msg, i) => {\r\n                            return (<div key={msg.date}>{msg.message}</div>);\r\n                        })\r\n                    }\r\n                    <div className=\"align-self-end text-muted\">{formatDate(this.props.msgs[this.props.msgs.length - 1].date)}</div>\r\n                </Media>\r\n            </Media>\r\n        );\r\n    }\r\n}","export function groupBy(array, key) {\r\n    return array.reduce((prev, curr) => {\r\n        if (!prev.length) {\r\n            prev.push([curr]);\r\n            return prev;\r\n        }\r\n        else {\r\n            const topArr = prev.pop();\r\n            const top = topArr[topArr.length - 1];\r\n\r\n            if (top[key] === curr[key]) {\r\n                topArr.push(curr);\r\n                prev.push(topArr);\r\n                return prev;\r\n            }\r\n            else {\r\n                prev.push(topArr);\r\n                prev.push([curr]);\r\n                return prev;\r\n            }\r\n        }\r\n    }, []);\r\n}\r\n\r\n/**\r\n * Dose not work for objects that contains functions.\r\n * @param {*} obj \r\n */\r\nexport function deepClone(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport function formatDate(date) {\r\n    //format date based on time elapsed\r\n    // if date is more than 24 hours old, return date month year\r\n    // else return time of day it was written.\r\n    const before = new Date(date);\r\n    const now = new Date();\r\n    const diff = now - before;\r\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    let [day, dt, month, yr, hr, min, sec] \r\n        = [\r\n            before.getDay(), \r\n            before.getDate(),\r\n            before.getMonth(),\r\n            before.getFullYear(),\r\n            before.getHours(),\r\n            before.getMinutes(),\r\n            before.getSeconds()\r\n        ];\r\n    if (diff > (24 - hr) * 60 * 60 * 1000) {\r\n        return `${days[day]} at ${hr}:${min}:${sec} - ${dt}.${month}.${yr}`;\r\n    }\r\n    else {\r\n        if (min < 10) {\r\n            min = ''.concat('0', min);\r\n        }\r\n        return `${hr}:${min}`;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { groupBy } from './util.js';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    ListGroupItem,\r\n    ListGroup,\r\n} from 'reactstrap';\r\nimport Message from './components/Message.js';\r\nimport './Chat.css';\r\n\r\nclass Chat extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '' };\r\n\r\n        this.delayBetweenTypingStates = 10000;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.sendChatMessage = this.sendChatMessage.bind(this);\r\n        this.notifyStartTyping = this.notifyStartTyping.bind(this);\r\n        this.notifyStoppedTyping = this.notifyStoppedTyping.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.typingTimeoutID);\r\n    }\r\n\r\n    sendChatMessage(e) {\r\n        e.preventDefault();\r\n\r\n        this.notifyStoppedTyping();\r\n        this.props.send({\r\n            type: 'chat',\r\n            message: this.state.value,\r\n        });\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.notifyStartTyping();\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    notifyStartTyping() {\r\n        if (this.state.value === '') {\r\n            return;\r\n        }\r\n        clearTimeout(this.typingTimeoutID);\r\n        if (this.timerIsRunning) {\r\n            this.typingTimeoutID = setTimeout(this.notifyStoppedTyping, this.delayBetweenTypingStates);\r\n        }\r\n        else {\r\n            this.props.send({ type: 'started_typing' });\r\n            this.timerIsRunning = true;\r\n            this.typingTimeoutID = setTimeout(this.notifyStoppedTyping, this.delayBetweenTypingStates);\r\n        }\r\n    }\r\n\r\n    notifyStoppedTyping() {\r\n        this.props.send({ type: 'stopped_typing' });\r\n        this.timerIsRunning = false;\r\n        clearTimeout(this.typingTimeoutID);\r\n    }\r\n\r\n    render() {\r\n        const groupedMessages = groupBy(this.props.messages, 'userid');\r\n\r\n        let messages = groupedMessages.map((msgs, i) => <Message msgs={msgs} key={'msg-group-'+ i} />);\r\n\r\n        messages = messages.map((m, i) => [m, <hr key={'hr' + i}></hr>]).flat();\r\n        messages = messages.slice(0, -1);\r\n        const activeUsers = this.props.users\r\n            .map((user, i) => <p className=\"ml-2 font-weight-light\" key={'lgitem-'+ i}>- {user}</p>);\r\n\r\n        return (\r\n            <Container fluid={true} className=\"h-100\">\r\n                <Row className=\" h-100\">\r\n                    <Col sm=\"8\" className=\"col-left mh-100 bg-light\">\r\n                        <div className=\"d-flex flex-column h-100\">\r\n                            <div className=\"d-flex flex-column flex-grow-1 mh-100\">\r\n                                <div className=\"overflow-container mh-100\">\r\n                                    <MessageList messages={messages} />\r\n                                </div>\r\n                                <p className=\"flex-shrink-0\">\r\n                                    <Typers typers={this.props.typers}/>\r\n                                </p>\r\n                                <form className=\"flex-shrink-0\" onSubmit={this.sendChatMessage}>\r\n                                    <div className=\"form-group row\">\r\n                                        <div className=\"col\">\r\n                                            <input className=\"form-control bg-dark text-light\" id=\"message-input\" placeholder=\"Message...\" type=\"text\" onChange={this.handleChange} value={this.state.value} />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm=\"4\" className=\"col-right bg-dark text-light d-none d-sm-block\">\r\n                        <p className=\"mt-3 ml-2\">Active yousers</p>\r\n                        {activeUsers}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nclass MessageList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.scrollToBottom = this.scrollToBottom.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overflow-content mr-3\" ref={div => this.messageList = div}>\r\n                <div>{this.props.messages}</div>\r\n                <div style={{float: \"left\", clear: \"both\"}}\r\n                    ref={(el) => {this.messagesEnd = el; }}>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Typers(props) {\r\n    if (!props.typers.length) {\r\n        return null;\r\n    }\r\n    else if (props.typers.length === 1) {\r\n        return <span>{props.typers[0]} is typing a message...</span>\r\n    }\r\n    else if (props.typers.length === 2) {\r\n        return <span>{props.typers[0]} and {props.typers[1]} are typing a message...</span>\r\n    }\r\n    else {\r\n        return <span>{props.typers[0]}, {props.typers[1]} and {props.typers.length - 2} other users are typing...</span>\r\n    }\r\n}\r\n\r\nexport default Chat;","import React, { Component } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand\r\n} from 'reactstrap';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Navbar className=\"bg-dark\" id=\"my-header\" color=\"light\" dark fixed=\"top\">\r\n                <NavbarBrand className=\"mr-auto text-light\">active users</NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} className=\"mr-2\" />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <hr />\r\n                    <div>\r\n                        {\r\n                            this.props.users.map((u, i) => <p key={'header-user-' + i}>{u}</p>)\r\n                        }\r\n                    </div>\r\n                </Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}","class ConnectionManager {\r\n    constructor(uiHandler) {\r\n        this.uiManager = uiHandler;\r\n        this.conn = null;\r\n        this.id = null;\r\n        this.peers = new Map();\r\n\r\n        this.send = this.send.bind(this);\r\n    }\r\n\r\n    connect(address) {\r\n        this.conn = new WebSocket(address);\r\n\r\n        this.conn.addEventListener('open', () => {\r\n            console.log('Connection established!')\r\n        });\r\n\r\n        this.conn.addEventListener('message', event => {\r\n            this.receive(event.data);\r\n        });\r\n    }\r\n\r\n    isOpen() {\r\n        return this.conn.readyState === WebSocket.OPEN;\r\n    }\r\n\r\n    receive(msg) {\r\n        const message = JSON.parse(msg);\r\n\r\n        if (message.type === 'chat') {\r\n\r\n            const { userid: u, message: m, date: d } = message.data;\r\n            console.log('Received a new message from', u);\r\n            this.uiManager.receiveMessage(u, m, d);\r\n        }\r\n        else if (message.type === 'chat_history') {\r\n\r\n            console.log('Received a chat log of', message.data.messages.length, 'messages.');\r\n            const messages = message.data.messages;\r\n            this.uiManager.receiveChatHistory(messages);\r\n        }\r\n        else if (message.type === 'server_broadcast') {\r\n            const me = message.data.peers.you;\r\n            const others = message.data.peers.clients;\r\n            this.uiManager.receiveActiveUsers([me, ...others.map(o => o.id)]);\r\n        }\r\n        else if (message.type === 'pong') {\r\n            console.log('Ping pong successful.');\r\n        }\r\n        else if (message.type === 'user_started_typing') {\r\n            console.log('A user started typing');\r\n            this.uiManager.addToTypers(message.data.userid);\r\n        }\r\n        else if (message.type === 'user_stopped_typing') {\r\n            console.log('A user stopped typing');\r\n            this.uiManager.removeFromTypers(message.data.userid);\r\n        }\r\n    }\r\n\r\n    send(data) {\r\n        const msg = JSON.stringify(data);\r\n        console.log('Sending message', msg);\r\n        this.conn.send(msg);\r\n    }\r\n}\r\n\r\nexport default ConnectionManager;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Chat from './Chat.js';\r\nimport Header from './components/Header.js';\r\nimport ConnectionManager from './ConnectionManager.js';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { messages: [], users: [], typers: [] };\r\n\t\tthis.connectionManager = null;\r\n\r\n\t\tthis.send = this.send.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst url = this.getServerUrl();\r\n        this.connectionManager = new ConnectionManager(this);\r\n        this.connectionManager.connect(url);\r\n        this.pingTimeoutId = setTimeout(this.send, 30000, { type: 'ping' });\r\n\t}\r\n\r\n\tremoveFromTypers(userid) {\r\n\t\tthis.setState(prev => ({\r\n\t\t\ttypers: prev.typers.filter(typerid => typerid !== userid)\r\n\t\t}));\r\n\t}\r\n\r\n\tgetServerUrl() {\r\n        if (window.location.hostname === 'localhost') {\r\n            return 'ws://localhost:9876';\r\n        }\r\n        else {\r\n            return 'wss://fred-im.herokuapp.com';\r\n        }\r\n\t}\r\n\r\n\treceiveChatHistory(messages) {\r\n\t\tthis.setState({ messages });\r\n\t}\r\n\r\n\treceiveMessage(userid, msg, date) {\r\n\t\tthis.setState(prev => ({\r\n\t\t\tmessages: [...prev.messages, { userid, message: msg, date }]\r\n\t\t}));\r\n\t}\r\n\r\n\treceiveActiveUsers(users) {\r\n\t\tconst set = new Set(users);\r\n\t\tthis.setState({ users: [...set] });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App d-flex flex-column\">\r\n\t\t\t\t<Header users={this.state.users} />\r\n\t\t\t\t<Chat users={this.state.users} typers={this.state.typers} messages={this.state.messages} send={this.send}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tsend(data) {\r\n\t\tclearTimeout(this.pingTimeoutId);\r\n\t\tthis.pingTimeoutId = setTimeout(this.send, 30000, { type: 'ping' });\r\n\t\tthis.connectionManager.send(data);\r\n\t}\r\n\r\n\taddToTypers(userid) {\r\n\t\tthis.setState(prev => ({\r\n\t\t\ttypers: [...prev.typers, userid]\r\n\t\t}));\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// "],"sourceRoot":""}