{"version":3,"sources":["doge.png","components/Message.js","util.js","Chat.js","components/Header.js","ConnectionManager.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Message","userid","this","props","msgs","react_default","a","createElement","className","src","logo","alt","style","minWidth","map","msg","i","key","concat","date","message","before","Date","diff","_ref","getDay","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","dt","month","yr","hr","min","sec","formatDate","length","Component","Chat","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","delayBetweenTypingStates","handleChange","bind","assertThisInitialized","sendChatMessage","notifyStartTyping","notifyStoppedTyping","clearTimeout","typingTimeoutID","e","preventDefault","send","type","setState","event","target","timerIsRunning","setTimeout","reactstrap_es","fluid","minHeight","isOpen","overflow","Chat_MessageContainer","messages","height","Typers","typers","onSubmit","disabled","autoComplete","onChange","placeholder","required","MessageContainer","_this2","scrollToBottom","messagesEnd","scrollIntoView","array","_this3","reduce","prev","curr","topArr","pop","push","Message_Message","m","flat","slice","ref","el","Header","toggle","color","dark","onClick","navbar","users","u","ConnectionManager","uiHandler","uiManager","conn","id","peers","Map","connect","address","WebSocket","addEventListener","console","log","toggleOpenState","receive","data","readyState","OPEN","JSON","parse","_message$data","d","receiveMessage","receiveChatHistory","me","you","others","clients","receiveActiveUsers","toConsumableArray","o","addToTypers","removeFromTypers","stringify","App","connectionManager","url","getServerUrl","filter","typerid","window","location","hostname","set","Set","Header_Header","src_Chat_0","pingTimeoutId","prevState","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c6381fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doge.69ae4e8f.png\";","import React, { Component } from 'react';\r\nimport { formatDate } from '../util.js';\r\nimport logo from '../doge.png';\r\n\r\nexport default class Message extends Component {\r\n\r\n    render() {\r\n        const { userid } = this.props.msgs[0];\r\n        return (\r\n            <li className=\"media ow-wrap-break-word\" >\r\n                <img className=\"mr-3 avatar rounded-circle\" src={logo} alt=\"Avatar\" />\r\n                <div className=\"media-body\" style={{minWidth: '0'}}>\r\n                    <h5 className=\"mt-0\">{userid}</h5>\r\n                    <ul className=\"list-unstyled d-flex flex-column\">\r\n                        {\r\n                            this.props.msgs.map((msg, i) => {\r\n                                return <li key={`${i}sub${msg.date}`}>{msg.message}</li>;\r\n                            })\r\n                        }\r\n                        <li className=\"mt-2 font-weight-light text-muted align-self-end\">{formatDate(this.props.msgs[this.props.msgs.length - 1].date)}</li>\r\n                    </ul>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}","export function groupBy(array, key) {\r\n    return array.reduce((prev, curr) => {\r\n        if (!prev.length) {\r\n            prev.push([curr]);\r\n            return prev;\r\n        }\r\n        else {\r\n            const topArr = prev.pop();\r\n            const top = topArr[topArr.length - 1];\r\n\r\n            if (top[key] === curr[key]) {\r\n                topArr.push(curr);\r\n                prev.push(topArr);\r\n                return prev;\r\n            }\r\n            else {\r\n                prev.push(topArr);\r\n                prev.push([curr]);\r\n                return prev;\r\n            }\r\n        }\r\n    }, []);\r\n}\r\n\r\n/**\r\n * Dose not work for objects that contains functions.\r\n * @param {*} obj \r\n */\r\nexport function deepClone(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport function formatDate(date) {\r\n    //format date based on time elapsed\r\n    // if date is more than 24 hours old, return date month year\r\n    // else return time of day it was written.\r\n    const before = new Date(date);\r\n    const now = new Date();\r\n    const diff = now - before;\r\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    let [day, dt, month, yr, hr, min, sec] \r\n        = [\r\n            before.getDay(), \r\n            before.getDate(),\r\n            before.getMonth(),\r\n            before.getFullYear(),\r\n            before.getHours(),\r\n            before.getMinutes(),\r\n            before.getSeconds()\r\n        ];\r\n    if (diff > (24 - hr) * 60 * 60 * 1000) {\r\n        return `${days[day]} at ${hr}:${min}:${sec} - ${dt}.${month}.${yr}`;\r\n    }\r\n    else {\r\n        if (min < 10) {\r\n            min = ''.concat('0', min);\r\n        }\r\n        return `${hr}:${min}`;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { groupBy } from './util.js';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n} from 'reactstrap';\r\nimport Message from './components/Message.js';\r\nimport './Chat.css';\r\nimport './Loader.css';\r\n\r\nclass Chat extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '' };\r\n\r\n        this.delayBetweenTypingStates = 10000;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.sendChatMessage = this.sendChatMessage.bind(this);\r\n        this.notifyStartTyping = this.notifyStartTyping.bind(this);\r\n        this.notifyStoppedTyping = this.notifyStoppedTyping.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.typingTimeoutID);\r\n    }\r\n\r\n    sendChatMessage(e) {\r\n        e.preventDefault();\r\n\r\n        this.notifyStoppedTyping();\r\n        this.props.send({\r\n            type: 'chat',\r\n            message: this.state.value,\r\n        });\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.notifyStartTyping();\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    notifyStartTyping() {\r\n        if (this.state.value === '') {\r\n            return;\r\n        }\r\n        clearTimeout(this.typingTimeoutID);\r\n        if (this.timerIsRunning) {\r\n            this.typingTimeoutID = setTimeout(this.notifyStoppedTyping, this.delayBetweenTypingStates);\r\n        }\r\n        else {\r\n            this.props.send({ type: 'started_typing' });\r\n            this.timerIsRunning = true;\r\n            this.typingTimeoutID = setTimeout(this.notifyStoppedTyping, this.delayBetweenTypingStates);\r\n        }\r\n    }\r\n\r\n    notifyStoppedTyping() {\r\n        this.props.send({ type: 'stopped_typing' });\r\n        this.timerIsRunning = false;\r\n        clearTimeout(this.typingTimeoutID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid={true} style={{ minHeight: '0' }} className=\"d-flex flex-column flex-grow-1\">\r\n                {\r\n                    this.props.isOpen &&\r\n                    (\r\n                        <Row className=\"flex-grow-1\" style={{ overflow: 'auto' }}>\r\n                            <Col className=\"flex-grow-1\">\r\n\r\n                                <MessageContainer messages={this.props.messages} />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }\r\n                {\r\n                    !this.props.isOpen &&\r\n                    (\r\n                        <Row className=\"flex-grow-1\" style={{ overflow: 'auto' }}>\r\n                            <Col className=\"flex-grow-1 d-flex flex-column justify-content-center align-items-center\">\r\n                                <div className=\"d-flex flex-column align-items-center\">\r\n                                    <div className=\"spinner\">\r\n                                        <div className=\"double-bounce1\"></div>\r\n                                        <div className=\"double-bounce2\"></div>\r\n                                    </div>\r\n                                    <p style={{}}>Connecting...</p>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }\r\n\r\n                <Row className=\"flex-shrink-0\">\r\n                    <Col className=\"\" style={{ height: '2em' }}>\r\n                        <Typers typers={this.props.typers} />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"flex-shrink-0\">\r\n                    <Col>\r\n                        <form onSubmit={this.sendChatMessage} disabled={!this.props.isOpen}>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input\r\n                                    autoComplete=\"off\"\r\n                                    disabled={!this.props.isOpen}\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Message...\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    required\r\n                                />\r\n                                <div className=\"input-group-append\">\r\n                                    <button \r\n                                        className=\"input-group-text\"\r\n                                        type=\"submit\"\r\n                                        disabled={!this.props.isOpen}\r\n                                    >\r\n                                        Send\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}\r\nclass MessageContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.scrollToBottom = this.scrollToBottom.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.messagesEnd.scrollIntoView();\r\n    }\r\n\r\n    render() {\r\n        const groupedMessages = groupBy(this.props.messages, 'userid');\r\n\r\n        let messages = groupedMessages.map((msgs, i) => <Message msgs={msgs} key={'msg-group-' + i} />);\r\n\r\n        messages = messages.map((m, i) => [m, <hr key={'hr' + i}></hr>]).flat();\r\n        messages = messages.slice(0, -1);\r\n\r\n        return (\r\n            <ul className=\"list-unstyled\">\r\n                {messages}\r\n                <li\r\n                    ref={(el) => { this.messagesEnd = el }}\r\n                >\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Typers(props) {\r\n    if (!props.typers.length) {\r\n        return null;\r\n    }\r\n    else if (props.typers.length === 1) {\r\n        return <span>{props.typers[0]} is typing a message...</span>\r\n    }\r\n    else if (props.typers.length === 2) {\r\n        return <span>{props.typers[0]} and {props.typers[1]} are typing a message...</span>\r\n    }\r\n    else {\r\n        return <span>{props.typers[0]}, {props.typers[1]} and {props.typers.length - 2} other users are typing...</span>\r\n    }\r\n}\r\n\r\nexport default Chat;","import React, { Component } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand\r\n} from 'reactstrap';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Navbar className=\"bg-dark flex-shrink-0\" color=\"light\" dark>\r\n                <NavbarBrand className=\"mr-auto text-light\">active users</NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} className=\"mr-2\" />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <hr />\r\n                    <div className=\"text-light\">\r\n                        {\r\n                            this.props.users.map((u, i) => <p key={'header-user-' + i}>{u}</p>)\r\n                        }\r\n                    </div>\r\n                </Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}","class ConnectionManager {\r\n    constructor(uiHandler) {\r\n        this.uiManager = uiHandler;\r\n        this.conn = null;\r\n        this.id = null;\r\n        this.peers = new Map();\r\n\r\n        this.send = this.send.bind(this);\r\n        this.connect = this.connect.bind(this);\r\n    }\r\n\r\n    connect(address) {\r\n        this.conn = new WebSocket(address);\r\n\r\n        this.conn.addEventListener('open', () => {\r\n            console.log('Connection established!');\r\n            this.uiManager.toggleOpenState();\r\n        });\r\n\r\n        this.conn.addEventListener('message', event => {\r\n            this.receive(event.data);\r\n        });\r\n    }\r\n\r\n    isOpen() {\r\n        return this.conn.readyState === WebSocket.OPEN;\r\n    }\r\n\r\n    receive(msg) {\r\n        const message = JSON.parse(msg);\r\n\r\n        if (message.type === 'chat') {\r\n\r\n            const { userid: u, message: m, date: d } = message.data;\r\n            console.log('Received a new message from', u);\r\n            this.uiManager.receiveMessage(u, m, d);\r\n        }\r\n        else if (message.type === 'chat_history') {\r\n\r\n            console.log('Received a chat log of', message.data.messages.length, 'messages.');\r\n            const messages = message.data.messages;\r\n            this.uiManager.receiveChatHistory(messages);\r\n        }\r\n        else if (message.type === 'server_broadcast') {\r\n            const me = message.data.peers.you;\r\n            const others = message.data.peers.clients;\r\n            this.uiManager.receiveActiveUsers([me, ...others.map(o => o.id)]);\r\n        }\r\n        else if (message.type === 'pong') {\r\n            console.log('Ping pong successful.');\r\n        }\r\n        else if (message.type === 'user_started_typing') {\r\n            console.log('A user started typing');\r\n            this.uiManager.addToTypers(message.data.userid);\r\n        }\r\n        else if (message.type === 'user_stopped_typing') {\r\n            console.log('A user stopped typing');\r\n            this.uiManager.removeFromTypers(message.data.userid);\r\n        }\r\n    }\r\n\r\n    send(data) {\r\n        const msg = JSON.stringify(data);\r\n        console.log('Sending message', msg);\r\n        this.conn.send(msg);\r\n    }\r\n}\r\n\r\nexport default ConnectionManager;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Chat from './Chat.js';\r\nimport Header from './components/Header.js';\r\nimport ConnectionManager from './ConnectionManager.js';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { messages: [], users: [], typers: [], isOpen: false };\r\n\t\tthis.connectionManager = null;\r\n\r\n\t\tthis.send = this.send.bind(this);\r\n\t}\r\n\r\n\taddToTypers(userid) {\r\n\t\tthis.setState(prev => ({\r\n\t\t\ttypers: [...prev.typers, userid]\r\n\t\t}));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst url = this.getServerUrl();\r\n        this.connectionManager = new ConnectionManager(this);\r\n\t\t// this.connectionManager.connect(url);\r\n\t\tsetTimeout(this.connectionManager.connect, 1000, url); // Fake delay\r\n        // this.pingTimeoutId = setTimeout(this.send, 30000, { type: 'ping' });\r\n\t}\r\n\r\n\tremoveFromTypers(userid) {\r\n\t\tthis.setState(prev => ({\r\n\t\t\ttypers: prev.typers.filter(typerid => typerid !== userid)\r\n\t\t}));\r\n\t}\r\n\r\n\tgetServerUrl() {\r\n        if (window.location.hostname === 'localhost') {\r\n            return 'ws://localhost:9876';\r\n        }\r\n        else {\r\n            return 'wss://fred-im.herokuapp.com';\r\n        }\r\n\t}\r\n\r\n\treceiveChatHistory(messages) {\r\n\t\tthis.setState({ messages });\r\n\t}\r\n\r\n\treceiveMessage(userid, msg, date) {\r\n\t\tthis.setState(prev => ({\r\n\t\t\tmessages: [...prev.messages, { userid, message: msg, date }]\r\n\t\t}));\r\n\t}\r\n\r\n\treceiveActiveUsers(users) {\r\n\t\tconst set = new Set(users);\r\n\t\tthis.setState({ users: [...set] });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App d-flex flex-column\" style={{ height: '100vh' }}>\r\n\t\t\t\t<Header users={this.state.users} />\r\n\t\t\t\t<Chat \r\n\t\t\t\t\tusers={this.state.users}\r\n\t\t\t\t\ttypers={this.state.typers}\r\n\t\t\t\t\tmessages={this.state.messages}\r\n\t\t\t\t\tsend={this.send}\r\n\t\t\t\t\tisOpen={this.state.isOpen}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tsend(data) {\r\n\t\tclearTimeout(this.pingTimeoutId);\r\n\t\tthis.pingTimeoutId = setTimeout(this.send, 30000, { type: 'ping' });\r\n\t\tthis.connectionManager.send(data);\r\n\t}\r\n\r\n\ttoggleOpenState() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tisOpen: !prevState.isOpen\r\n\t\t}));\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// "],"sourceRoot":""}